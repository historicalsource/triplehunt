	.TITLE BEARDIAG ORR HIT THE BEAR DIAG
	.SBTTL 	DEFINITIONS
	.ASECT
OBSTK:	.BLKB 10
ORGSTK:	.BLKB 10
HPSTK:	.BLKB 10
VPSTK:	.BLKB 10
VECSTK:	.BLKB 10
TSSTG:	.BLKB 2
TXSTG:	.BLKB 2
TXSTG1:	.BLKB 2
ROARON:	.BLKB 1
RSET:	.BLKB 1
DIRB:	.BLKB 1
RSC:	.BLKB 1
GFG1:	.BLKB 2
TXSTG2:	.BLKB 2
POT:	.BLKB 2				;SELECT POT, CONTAINS 0C10 THRU 0C13
OLDSHT:	.BLKB 2
INWH:	.BLKB 1				;MESSAGE INPUT ADDRESS HOLD
INW1:	.BLKB 1				;LOW ORDER INPUT ADDRESS
OUTWH:	.BLKB 1				;MESSAGE OUTPUT ADDRESS HOLD
OUTW1:	.BLKB 1				;LOW ORDER OUTPUT ADDRESS
VALUE:	.BLKB 1				;HOLDS LAST READ POT VALUE FROM INTERRUPT ROUTINE
TSTWD:	.BLKB 1				;TEST WORD, ONE BIT SET ONLY, USED TO CLEAR
					;OR SET A BIT IN CLRFLG IN NORMAL GUN ROUTINE
					;BIT 0 SET, POT X1; BIT L SET, POT Y1, ETC.
WAIT:	.BLKB 1				;V BLANK WAIT FLAG. ALLOW NO V-BLANK INTERRUPT WHEN NEGATIVE
CLRFLG:	.BLKB 1
GOULCN:	.BLKB 1				;UNUSED
GVTYM:	.BLKB 1
EXT:	.BLKB 2				;&111
EXFG:	.BLKB 2
EXVAL:	.BLKB 2
RTC:	.BLKB 1				;REAL TIME CLOCK
CONCNT:	.BLKB 1
FREE:	.BLKB 1				;ESCAPE FLAG IN GUN ALIGNMENT. IF 0, TEST SWITCH OFF
R0:	.BLKB 1				;GEN. PURPOSE REGISTERS
R1:	.BLKB 1
R2:	.BLKB 1
R3:	.BLKB 1
R4:	.BLKB 1
R5:	.BLKB 1
RORFLG:	.BLKB 1
R8:	.BLKB 1
TIX:	.BLKB 2				;TEMP IX REGISTERS
TIX2:	.BLKB 2
TIX3:	.BLKB 2
TIX4:	.BLKB 2
TIX5:	.BLKB 2
SCRN1:	.BLKB 2				;SHOT 1 OUTPUT LOCATION
TMPPOT:	.BLKB 2
TDEL:	.BLKB 1
ATCNT:	.BLKB 1
RSPEED:	.BLKB 1
SLOT:	.BLKB 1
SCRECH:	.BLKB 1
SHOTS:	.BLKB 1
TRIG:	.BLKB 1				;UNUSED
LRAC:	.BLKB 1				;UNUSED
TYMCY:	.BLKB 1
TYMCNT:	.BLKB 1
TYMSTK:	.BLKB 10
VMSTK:	.BLKB 10
PCSTK:	.BLKB 10
R6:	.BLKB 1
R7:	.BLKB 1
TIMEC:	.BLKB 2
ATT:	.BLKB 1				;ATTRACT MODE FLAG, 0=ATTRACT, MINUS=NO ATTRACT
GUN1:	.BLKB 4
ALST:	.BLKB 2
RAMST:	.BLKB 2
COINS:	.BLKB 1				;COINS INSERTED COUNTER
POTX1:	.BLKB 1
POTY1:	.BLKB 1
DEV1:	.BLKB 2		
RORWRD:	.BLKB 2	
MSD:	.BLKB 1
GAME:	.BLKB 1
CREDIT:	.BLKB 1
TEMPV:	.BLKB 1
HISCR:	.BLKB 3
UPCKM:	.BLKB 1
LRCKM:	.BLKB 1
SW	=50000
DBE	=52000
LATCH	=52000
TPUSH	=50000
TSTSET	=52000
TDIS	=52000
BIG	=6071				;WINDOW ON FOR 64X64
SMALL	=6070				;WINDOW OFF FOR 32X32
DP	=2000
ORGRAM	=4057
VPRAM	=4000
HPRAM	=4020
PICRAM	=4060
ROAR	=2372				;*ASSIGN ADDRESS OF SOUND LATER
BEAR	=6076
SHOT	=2374
TRIGR	=6110
TYMSET	=6010
GAMSET	=6011
CMODE	=6012
TYMRST	=6013
WTDOG	=6013
CRAM	=6040
CN1	=6000
CN2	=6100
TSTSWT	=6110
STLMP	=6062
SKRET	=6064				;CHANGE TO 6064 ON FINAL
CNLKOT	=6066
RAM2EN	=6072
TAPE	=6074
DIAG	=40000
INTWRD	=6060
VBRSET	=6000
SWAP	=117
POTB	=142
OBJIN	=2263
OBJOT	=2273
SHTPL	=2167
	.PAGE
	.=40000
	.SBTTL	POWER UP RSET AND TEST SELECTION
PWRP:	SEI
	LDS	I,377
	CLI
	JSR	E,CLEAN
	LDAA	I,7
	STAA	E,SHTPL			;WRITE GO
	LDAA	I,17
	STAA	E,SHTPL+1
	TST	E,TAPE			;SOUNDS OFF
	TST	E,SKRET
	TST	E,STLMP			;LAMP OFF
	CLR	E,SHOT
	CLR	E,ROAR
	STAA	E,SMALL
1$:	TST	E,WTDOG
	LDAA	E,TPUSH
	BPL	1$
SOFF:	LDAA	I,377
2$:	DECA
	BNE	2$
	TST	E,WTDOG
	LDAA	E,TPUSH
	BMI	SOFF
	JSR	E,CLEAN
	CLR	E,TDIS
	LDAA	E,TSTSET
	ANDA	I,77
	BEQ	RAMTST
	ASLA
	LDX	I,JMPTBL
	STX	D,TIX
	ADDA	D,TIX+1		;A<-(TIX+1)+A
	STAA	D,TIX+1		;TIX+1<-A
	BCC	NOINC		;SET UP ADDRESS
	INC	E,TIX
NOINC:	LDX	D,TIX
	LDX	X,0		;WAIT FOR D7
	JMP	X,0		;JUMP TO PROPER TEST
JMPTBL:	.WORD	PWRP
	.WORD	BATTST
	.WORD	ROMTST
	.WORD	SCNTST
	.WORD 	SWTST
	.WORD	MOTPIC
	.WORD	SZMTST
	.WORD	MOTORG
	.WORD	CLRPIC
	.WORD	SNDTST
	.WORD	HITTST		;RUN AFTER MOTPIC
	.PAGE
	.SBTTL	RAM 0 TEST
RAMTST:	LDX	I,0		;WRITE TO RAM
	CLRA
2$:	STAA	X,0
	INX
	INCA
	BNE	2$		;WILL FALL THRU ON ZERO
	LDX	I,0		;READ BACK
3$:	CMPA	X,0		;SAME?
	BNE	EROR		;IF NOT,ERROR
	INX	
	INCA
	BNE	3$
	LDAA	I,377		;INORATE
	STAA	E,TDIS		;LIGHT ALL LEDS.
	JMP	E,PWRP	
EROR:	BITA	I,200		;UPPER OR LOWER
	BEQ	LWR
	LDAA	I,200		;UPPER ERROR
	BRA	ERLUP
LWR:	LDAA	I,100		;LOWER ERROR
ERLUP:	STAA	E,LATCH		;INDICATE ERROR
1$:	STAA	X,0		;LUP ON ADDRESS
	STAA	E,WTDOG
	BRA	1$		;UNCONDITIONALLY
	.PAGE
	.SBTTL	BAT RAM TEST
RYTE:	TST	E,WTDOG			;WRITE ALIGNMENT WORDS TO BAT RAM
	LDAA	X,0
	COMA
	TAB
	ANDA	I,17
	LSRB
	LSRB
	LSRB
	LSRB
	ORAA	I,20
	ORAB	I,20
	INX
	STX	D,TIX3
	STAA	D,TIX4+1
	LDX	D,TIX4
	TST	X,0
	LDX	D,TIX5
	TST	X,0
	TST	E,RAM2EN+1
	TST	E,RAM2EN
	INX
	STX	D,TIX5
	STAB	D,TIX4+1
	LDX	D,TIX4
	TST	X,0
	LDX	D,TIX5
	TST	X,0
	TST	E,RAM2EN+1
	TST	E,RAM2EN
	INX
	STX	D,TIX5
	RTS
	;SAVE ALIGNMENT WORDS
STRM2:	SEI
	LDAA	I,14			;POINTER INIT
	STAA	D,TIX4
	LDAA	I,4			;WORD COUNT
	STAA	D,R3
	LDX	I,CRAM
	STX	D,TIX5
	LDX	I,GUN1
1$:	BSR	RYTE
	LDX	D,TIX3
	DEC	E,R3
	BNE	1$
	TST	E,VBRSET		;RESET FLIPFLOP
	CLI
	RTS
	;RELOAD ALIGNMENT WORDS
GTWDS:	SEI
	LDAB	I,4			;WORD COUNT
	LDX	I,GUN1+3		;POINT TO TOP OF WORD DESTINATION
	STX	D,TIX4
	LDX	I,CRAM+7		;POINT TO STORAGE SPOT
1$:	BSR	REED			;GET A WORD
	LDX	D,TIX3
	DECB
	BNE	1$			;ALL 8 WORDS?
	TST	E,VBRSET
	CLI
	RTS
REED:	LDAA	X,0			;ALIGNMENT READ-BACK ROUTINE
	LDAA	X,0
	TST	E,WTDOG
	ASLA
	ASLA
	ASLA
	ASLA
	STAA	D,GUN1			;TEMP HOLD AT THIS TIME
	DEX
	LDAA	X,0
	LDAA	X,0
	ANDA	I,17			;LOWER 4 BITS ONLY
	ORAA	D,GUN1			;WE HAVE A WHOLE WORD NOW SO ....
	DEX				;POINT TO NEXT AND RETURN
	STX	D,TIX3
	LDX	D,TIX4
	STAA	X,0
	DEX
	STX	D,TIX4
	RTS
BATTST:	LDAA I,1

1$:	LDX	I,GUN1
	TST	E,WTDOG
	LDAB	I,4		;WORD COUNT
2$:	STAA	X,0
	INX
	INCA
	DECB
	BNE	2$
	PSHA
	JSR	E,STRM2
	JSR	E,GTWDS		;READ & WRITE
	PULA
	DECA
	LDX	I,GUN1+3
	LDAB	I,4
3$:	CMPA	X,0		;SAME?
	BNE	ERR
	DECA
	DEX
	DECB
	BNE	3$
	LDAA	I,377		;IF HERE, BAT RAM OK
	STAA	E,TDIS		;LIGHT ALL LEDS
	JMP	E,PWRP
ERR:	LDAA	I,201		;LIGHT 2 LEDS TO INDICATE ERROR
	STAA	E,TDIS
	TST	E,WTDOG
	BRA	BATTST
	.PAGE
	.SBTTL	ROM CHECKSUM TEST
TOPP:	.BYTE	0,0
CKM2:	.BYTE	0,0
CKM3:	.BYTE	0,0
CKM4:	.BYTE	0,0
CKSM:	CLR	E,UPCKM
	CLR	E,LRCKM
CK1:	INX
	LDAA	X,0
	TAB
	ANDA	I,17
	ADDA	D,LRCKM
	STAA	D,LRCKM
	LSRB
	LSRB
	LSRB
	LSRB
	ADDB	D,UPCKM
	STAB	D,UPCKM
	INX
	CPX	D,R2
	BNE	CK1
	STAA	E,WTDOG
	RTS
;ROM TEST ROUTINE
ROM1:	CLR	E,R0
	TST	E,WTDOG
ROMTST:	LDX	I,71777
	STX	D,R2
	LDX	I,67777
	BSR	CKSM
	CMPA	E,TOPP+1
	BEQ	CK2
	LDAA	I,1
	STAA	D,R0
	STAA	E,LATCH		;LIGHT 2 TO 0 FOR ERROR LSB 1
CK2:	CMPB	E,TOPP
	BEQ	ROM2
	LDAB	I,2
	ORAB	D,R0
	STAB	D,R0
	STAB	E,LATCH		;LIGHT 2 TO 1 FOR ERROR MSB 1
ROM2:	LDX	I,73777
	STX	D,R2
	LDX	I,71777
	BSR	CKSM
	CMPA	E,CKM2+1
	BEQ	CK3
	LDAA	I,4
	ORAA	D,R0
	STAA	D,R0
	STAA	E,LATCH		;LIGHT 2 TO 2=ERROR LSB 2
CK3:	CMPB	E,CKM2
	BEQ	ROM3
	LDAB	I,10
	ORAB	D,R0
	STAB	D,R0
	STAB	E,LATCH		;LIGHT 2 TO 3=ERROR MSB 2
ROM3:	LDX	I,75777
	STX	D,R2
	LDX	I,73777
	BSR	CKSM
	CMPA	E,CKM3+1
	BEQ	CK4
	LDAA	I,20
	ORAA	D,R0
	STAA	D,R0
	STAA	E,LATCH		;LIGHT 2 TO 4 FOR ERROR LSB 3
CK4:	CMPB	E,CKM3
	BEQ	ROM4
	LDAB	I,40
	ORAB	D,R0
	STAB	D,R0		;LIGHT 2 TO 5 FOR ERROR MSB 3
	STAB	E,LATCH
ROM4:	LDX	I,77777
	STX	D,R2
	LDX	I,75777
	JSR	E,CKSM
	CMPA	E,CKM4+1
	BEQ	CK5
	LDAA	I,100
	ORAA	D,R0
	STAA	D,R0
	STAA	E,LATCH		;LIGHT 2 TO 6 FOR ERROR LSB 4
CK5:	CMPB	E,CKM4
	BEQ	ENCK
	LDAA	I,200
	ORAA	D,R0
	STAA	D,R0
	STAA	E,LATCH		;LIGHT 2 TO 7 FOR ERROR MSB 4
ENCK:	LDAB	D,R0
	BNE	BADROM
	CLR	E,LATCH		;MAKE SURE ALL ARE OFF
BADROM:	STAA	E,WTDOG		;WATCH DOG
	LDAA	E,TPUSH
	BITA	I,100
	BEQ	BADROM
	JMP	E,WTOF
	.PAGE
	.SBTTL	SCREEN TEST
SCNTST:	CLR	E,WAIT		;VBLANK WAIT FLAG
2$:	TST	E,WAIT		;VBLANK WAIT FLAG
	BEQ	2$
	JSR	E,CLEAN
	LDAA	E,SW		;D6 PUSHED?
	ASLA
	BPL	SCNTST		;IF NOT,CONTINUE SAME TEST
WT3:	JSR	E,WTOF		;WAIT FOR D6 OFF
WTAGN:	LDX	I,2000		;SCREEN,PART 2-ALPHANUMERIC TEST
	CLRA
1$:	STAA	X,0		;WRITE CHAR
	INCA
	INX
	CPX	I,2360		;END OF SCREEN
	BNE	1$
	LDAA	E,SW		;D6 PUSHED
	STAA	E,WTDOG
	ASLA	
	BPL	WTAGN
	JMP	E,PWRP		;RETURN TO MAIN LOOP
	.PAGE
	.RADIX	16
	.SBTTL	SWITCH TEST
	;SWITCH TEST DISPLAY ROUTINE
SWTST:	JSR	E,CLEAN
1$:	STAA	E,STLMP+1
	LDX	I,0426
	LDAA	E,TYMRST		;TIME SWITCHES
	BSR	OUTLP
	LDX	I,0436
	LDAA	E,TYMSET		;GAME SELECT SWITCH
	BSR	OUTLP
	LDX	I,0446
	LDAA	E,GAMSET		;START & COIN 1
	BSR	OUTLP
	LDX	I,0456
	LDAA	E,CMODE			;COIN 2
	BSR	OUTLP
	LDX	I,0466
	LDAA	E,CN1			;TEST & TRIGGER
	BSR	OUTLP
	LDX	I,0476
	LDAA	E,CN2
	BSR	OUTLP
	LDX	I,0486
	LDAA	E,TSTSWT
	BSR	OUTLP
	LDAA	E,SW
	ASLA
	BPL	1$			;CONTINUE IF NOT PUSHED
	JSR	E,WTOF			;WAIT FOR RELASE
	BRA	POTTST
OUTLP:	LDAB	I,2
	STAB	D,R0
2$:	LDAB	I,30
	ASLA			;LEAVE AT LEFT BIT
	BCC	1$
	INCB
1$:	STAB	X,0
	INX
	DEC	E,R0
	BNE	2$
	TST	E,WTDOG
	RTS
	.PAGE
	.SBTTL	POT READ TEST
	;READ POT VALUE
POTTST:	CLI
	JSR	E,CLEAN
	STAA	E,STLMP
	CLR	E,WAIT		;ALLOW INTERRUPTS TO OCCURE
	JSR	E,WTOF		;WAIT FOR D6 OFF
	LDAA	I,0C		;INITIALIZE POT POINTER
	STAA	D,POT
	STAA	D,TMPPOT
	LDAA	I,10
	STAA	D,POT+1
	STAA	D,TMPPOT+1
1$:	LDX	I,POTX1
	LDAB	D,VALUE
	LDAA	D,POT+1		;0 OR 1
	ANDA	I,01
	BEQ	2$
	INX
2$:	STAB	X,0
	LDX	D,TMPPOT
	STX	D,POT
	CLR	E,WAIT
4$:	TST	E,WAIT
	BEQ	4$
	LDAA	D,POTX1		;FIRST POT VALUE
	LDX	I,0426		;FIRST OUTPUT ADDRESS
	BSR	OUTPAR

	INX
	LDAA	D,POTY1		;NEXT POT
	BSR	OUTPAR
	LDAA	E,SW		;D6 PUSHED?
	ASLA
	BPL	1$		;IF NOT CONTINUE TEST
	JMP	E,PWRP
OUTPAR:	TAB			;COPY VALUE
	LSRA	
	LSRA
	LSRA
	LSRA			;UPPER 4 BITS INTO LOWER 4 BITS
	ADDA	I,30		;MAKE ASCII
	CMPA	I,39		;IS IT A LETTER?
	BLS	ITSOK		;ELSE
	SUBA	I,39		;MAKE A LETTER
ITSOK:	STAA	X,0
	INX
	ANDB	I,0F		;LOWER 4 BITS
	ADDB	I,30		;MAKE ASCII
	CMPB	I,39		;NUMBER?
	BLS	ITOK		;IF YES, OUTPUT ASCII CONSTANT
	SUBB	I,39		;ITS A LETTER, 69 LESS
ITOK:	STAB	X,0
	INX
	TST	E,WTDOG
	RTS
	.PAGE
	.RADIX
	.SBTTL	MOTION OBJECT PICTURE TEST - 2 SIZES
MOTPIC:	JSR	E,CLEAN
	TST	E,BEAR			;KEEP THE BEARS AWAY FOR A WHILE
	TST	E,SMALL			;SMALL PEOPLE FOR THE TIME BEING
	CLR	E,R0
	CLR	E,R1
	BSR	INTORG
2$:	LDAB	I,377
1$:	STAB	D,OBSTK
	CLR	E,WAIT
	LDAA	I,205
	STAA	D,HPSTK
	STAA	D,VPSTK
	PSHB
	BSR	HORGR
	PULB
	LDAA	E,SW
	ASLA
	BPL	1$
	JSR	E,WTOF			;WAIT FOR D6 RELEASE
	DECB
	CMPB	I,357			;LAST PICTURE
	BNE	1$
	TST	E,R0			;DONE BEAR YET?
	BNE	3$
	TST	E,BEAR+1			;DO THEM NOW THEN
	INC	E,R0			;TELL THEM THATS WHAT IS GOING ON
	BRA	2$
3$:3$:	TST	E,R1			;WINDOW TESTED YET?
	BNE	4$
	TST	E,BIG			;MAKE A LARGE WINDOW
	INC	E,R1
	BRA	2$
4$:	JMP	E,PWRP
PICCLR:	LDX	I,VECSTK+10		;MOTION OBJECT CLEARING ROUTINE
1$:	CLR	X,0
	DEX
	BNE	1$
INTORG:	LDX	I,ORGSTK
	CLRA
SETORG:	STAA	X,0
	INX
	INCA
	CMPA	I,10
	BNE	SETORG
	TST	E,INTWRD		;WAIT FOR VBLANK
	BMI	S,-3
	TST	E,INTWRD
	BPL	S,-3
	LDAA	I,17
	LDX	I,ORGRAM
8$:	STAA	X,0
	DEX
	DECA
	BNE	8$
	STAA	X,0
	CLRA
1$:	STAA	X,0
	DEX
	CPX	I,VPRAM-1
	BNE	1$
	TST	E,WTDOG
	RTS
	;ORGANIZATION ROUTINE
HORGR:	CLR	E,TXSTG2
HR:	LDAA	I,377
	STAA	D,SWAP			;SET SWAP FLAG
	LDX	I,10
HR0:	DEX
	LDAA	X,ORGSTK		;GET ORG OBJ NUMBER
	STX	D,TXSTG	
	STAA	D,TXSTG2+1
	LDX	D,TXSTG2
	LDAB	X,HPSTK			;GET HPOS OF ORG OBJ
	LDX	D,TXSTG
	DEX
	LDAA	X,ORGSTK		;GET NEXT ORG OBJ NUMBER
	STAA	D,TXSTG2+1
	LDX	D,TXSTG2		;GET HPOS OF OBJECT
	LDAA	X,HPSTK
	LDX	D,TXSTG
	BNE 	CKSWP			;8 DONE?
	TST	E,SWAP
	BPL	HR			;IF SWAP CLEAR, RUN AGAIN
	TST	E,VBRSET
	TST	E,WTDOG
	RTS
CKSWP:	SBA				;COMPARE H PUSH ONS
	BLS	HR0			;IF>,SWAP
	CLR	E,SWAP			;CLEAR SWAP FLAG
	LDAA	X,ORGSTK
	LDAB	X,ORGSTK-1
	STAA	X,ORGSTK-1
	STAB	X,ORGSTK
	BRA	HR0
	.PAGE
	.SBTTL	MOTION OBJECT MOVEMENT TEST
	;THIS ROUTINE MOVES AN OBJECT DOWN THE SCREEN DIAG
	;WITH EACH PUSH OF D7 SO V & H LATCH IN RAMS CAN BE TESTED
	;PUSH D6 TO ESCAPE
SZMTST:	JSR	E,CLEAN
	LDAA	I,377			;SAME PICTURE
	STAA	D,OBSTK
	LDAB	I,10
NXTMV:	STAB	D,HPSTK
	STAB	D,VPSTK			;INITIALIZE POSITION
	STAB	E,WTDOG
	PSHB
	BSR	HORGR
	PULB	
	CLR	E,WAIT
1$:	TST	E,WAIT			;WAIT FOR INTERRUPT
	BEQ	1$
	LDAA	E,SW			;D6 PUSHED?
	ASLA
	BMI	SZOT		;END ON D6
	LDAA	E,SW			;D7?
	BPL	NXTMV
2$:	LDAA	I,377
3$:	DECA
	BNE	3$
	LDAA	E,SW
	STAA	E,WTDOG
	BMI	2$
	ADDB	I,20			;MOVE DOWN SCREEN
	BRA	NXTMV
SZOT:	JMP	E,PWRP
	.PAGE
	.SBTTL	MOTION ORGANIZATION TEST WITH MOTION
	;MOVES 4 OBJECTS DOWN SCREEN - ALLOWS ORG CHECKOUT
MOTORG:	JSR	E,CLEAN
	LDAA	I,377
	LDAB	I,4
	LDX	I,OBSTK
SETPIC:	STAA	X,0
	INX
	DECB
	BNE	SETPIC
	LDAA	I,20.
	STAA	D,HPSTK			;SET UP HP SLOTS
	LDAA	I,144
	STAA	D,HPSTK+1
	LDAA	I,253
	STAA	D,HPSTK+2
	LDAA	I,360
	STAA	D,HPSTK+3
	JSR	E,INTORG		;ORGANIZE OBJECTS
NXTOUT:	JSR	E,HORGR
	CLR	E,WAIT			;1INCREMENT PER FRAME
2$:	TST	E,WAIT			;LET INTERRUPT PUT IT OUT
	BEQ	2$
	LDX	I,VPSTK+3
MVDN:	INC	X,0			;INCREMENT VERTICAL
	DEX
	CPX	I,VPSTK-1
	BNE	MVDN
	LDAA	E,SW			;DO PUSHED?
	ASLA
	BPL	NXTOUT
	;ORG TEST PART 2-WRITE TO ORG RAM
AGN:	JSR	E,INTORG		;RESET ORG RAM
	CLR	E,WAIT
3$:	TST	E,WAIT
	BEQ	3$			;WAIT FOR V BLANK TO COME
	LDAA	E,SW
	STAA	E,WTDOG
	ASLA
	BPL	AGN
	JMP	E,PWRP
	.PAGE
	.SBTTL	A FEW SUBROUTINES
WTOF:	LDAA	I,377			;A BIT OF DEBOUNCE
1$:	DECA
	BNE	1$
	LDAA	E,SW			;IS THE JERK STILL PUSHING THE BUTTON?
	STAA	E,WTDOG			;WATCH DOG
	ASLA
	BMI	WTOF			;IF SO LETS GIVE HIM A BIT MORE TIME TO RELASE
	RTS
CLRPIC:	BSR	CLEAN
	JMP	E,PWRP
CLEAN:	LDX	I,2000
1$:	CLR	X,0
	INX
	CPX	I,2360
	BNE	1$
	TST	E,WTDOG
	JMP	E,PICCLR
	.PAGE
	.SBTTL	SOUNDS TESTS
SNDTST:	TST	E,SKRET			;WAIT FOR D6, SOUNDS SHOULD BE OFF
	CLRB
	STAB	E,SHOT
	STAB	E,ROAR
	TST	E,TAPE			;TAPE OFF
	TST	E,WTDOG
	LDAA	E,SW
	ASLA
	BPL	SNDTST			;CONTINUE TO TURN OFF UNTIL D6
	BSR	WTOF			;WAIT FOR D6 RELEASE
TST1:	TST	E,SKRET+1		;SKREECH ON
	TST	E,WTDOG
	LDAA	E,SW
	ASLA
	BPL	TST1			;WAIT FOR D6
	TST	E,SKRET			;RWA OFF
	BSR	WTOF			;WAIT FOR RELEASE
2$:	LDAB	I,20			;SHOT SOUND OUT
3$:	CLR	E,WAIT			;WAIT 1 FRAME
1$:	TST	E,WAIT
	BEQ	1$
	LDAA	E,SW
	STAA	E,WTDOG			;D6 PUSHED
	ASLA
	BMI	TST3			;IF YES, DO ROAR TEST
	DECB
	STAB	E,SHOT			;OUTPUT SOUND
	BEQ	2$
	BRA	3$
TST3:	BSR	WTOF			;WAIT FOR RELEASE
	CLR	E,R0			;CLEAR ESCAPE FLAG
	CLRB				;TURN OFF THAT DAMN SHOT
	STAB	E,SHOT
	TST	E,BEAR+1		;TURN ON THE BEAR?
4$:	LDX	I,RORTBL
2$:	CLR	E,WAIT
1$:	TST	E,WAIT
	BEQ	1$
	LDAA	E,SW
	STAA	E,WTDOG
	ASLA
	BPL	3$
	COM	E,R0			;IF PUSHED, EXIT CONDITION
3$:	LDAB	X,0			;GET SOUND
	STAB	E,ROAR			;OUTPUT A SOUND
	INX
	CPX	I,RORTBL+100		;END OF ROAR
	BNE	2$			;IF NOT FINISH ROAR
	TST	E,R0			;ELSE CHECK FOR PUSHED BUTTON
	BEQ	4$			;IF NOT PUSHED, ANOTHER ROAR
5$:	TST	E,TAPE+1		;TAPE OUT
	LDAA	E,SW
	STAA	E,WTDOG
	ASLA
	BPL	5$
	TST	E,TAPE
	JMP	E,PWRP
RORTBL:	.BYTE	1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2
	.BYTE	4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
	.BYTE	4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
	.BYTE	4,4,4,4,4,4,4,4,3,3,3,2,2,1,1,0
	.PAGE
	.SBTTL	HIT INTERRUPT TEST
HITTST:	LDAB	I,7			;B=OBJECT TESTING #
	TST	E,WTDOG
	TST	E,BEAR			;NO BEARS AT THIS PIC-NIC
NXTHIT:	SEI
	JSR	E,CLEAN
	TST	E,WTDOG
	STAB	D,TIX+1
	CLR	E,TIX			;CONTAINS OBJECT TEST # 1-8
	LDX	D,TIX
	LDAA	I,205
	STAA	X,HPSTK			;SET H & V POS OF TEST OBJ
	STAA	X,VPSTK
	LDAA	I,377			;PICTURE SELECT - PICTURE DOES NOT MATTER
	STAA	X,OBSTK
	TBA
	PSHB
	ADDA	I,60			;ASCII # OF OUTPUT OBJECT
	STAA	E,OBJIN			;WRITE OBJECT NUMBER
	PSHA				;SAVE OBJECT OUT NUMBER
	JSR	E,HORGR			;PUT THINGS IN THEIR PLACE
	LDAA	I,77			;OUTPUT A SHOT
	STAA	E,SHTPL
	TST	E,VBRSET
	CLI
	CLR	E,WAIT			;WAIT FOR THINGS TO SETTLE DOWN
1$:	TST	E,WAIT
	BEQ	1$
	CLR	E,WAIT
2$:	TST	E,WAIT
	BEQ	2$
	CLR	E,SHTPL
	LDAA	D,R1			;GET OBJECT HIT NUMBER
	ADDA	I,60
	STAA	D,R3			;SAVE FOR COMPARE
	STAA	E,OBJOT			;OUTPUT IT TO THE PEOPLE WHO CARE
	PULA			;GET BACK WHAT WE PUT OUT!!!
	CMPA	D,R3			;SAME OBJECT HIT
	BEQ	WALP3			;IF YES, CONTINUE, ELSE WAIT
	LDAA	I,77
	STAA	E,SHTPL			;SHOT BACK OUT
	TST	E,SKRET			;SOUND OFF
WALP2:	LDAA	E,SW			;WAIT FOR D6 TO DO NEXT
	STAA	E,WTDOG
	ASLA				;WILL LOOP ON HIT
	BPL	WALP2
	JSR	E,WTOF			;WAIT FOR D6 RELEASE
WALP3:	JSR	E,CLEAN			;CLEAR SHOT AND NUMBERS
	PULB
	DECB
	BPL	NXTHIT
	LDAA	I,17			;0
	STAA	E,SHTPL
	LDAA	I,13			;K
	STAA	E,SHTPL+1
1$:	LDAA	E,SW
	STAA	E,WTDOG
	ASLA
	BPL	1$
	JMP	E,PWRP
	.PAGE
	.SBTTL	INTERRUPT ROUTINE
;INTERRUPT ROUTINE
INTP:	LDAB	E,INTWRD
	BMI	1$			;V BLANK?
	JMP	E,HIT
1$:	TST	E,WAIT
	BEQ	2$
	INC	E,RTC
	LDAB	E,VBRSET
	RTI
2$:	LDX	D,POT			;READ LAST POT
	LDAA	X,0
	STAA	D,VALUE
	LDAB	D,POT+1
	INCB
	ANDB	I,21			;0,1
	STAB	D,TMPPOT+1
	LDAB	D,POT
	STAB	D,TMPPOT
	STS	D,TSSTG
	INC	E,RTC
	LDS	I,OBSTK-1		;PICTURE CODE TRANSFER
	LDAB	I,10
	LDX	I,PICRAM
PICOUT:	PULA
	STAA	X,0
	INX
	DECB
	BNE	PICOUT
	LDAB	I,10			;ORGSTK TRANSFER
	LDX	I,ORGRAM-7
ORGOUT:	PULA
	COMA
	STAA	X,0
	INX
	DECB
	BNE	ORGOUT
	LDX	I,HPRAM
	LDAB	I,10
HPOUT:	PULA
	STAA	X,0
	INX
	DECB
	BNE	HPOUT
	LDX	I,VPRAM
	LDAB	I,10
VPOUT:	PULA
	STAA	X,0
	INX
	DECB
	BNE	VPOUT
	LDS	D,TSSTG
	LDX	I,HPRAM+10
	LDAB	I,10
	CLRA
7$:	STAA	X,0
	INX
	DECB
	BNE	7$
	COM	E,WAIT
	TST	E,VBRSET
	RTI
HIT:	ANDB	I,17			;WRITE OUT OBJECT HIT NUMBER
	STAB	D,R1
	TST	E,VBRSET
	RTI
	.RADIX	16
FILR	=47F8-.
	.REPT FILR
	.BYTE 0
	.ENDR
	.=47F8
	.WORD	INTP
	.WORD	PWRP
	.WORD	PWRP
	.WORD	PWRP
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         